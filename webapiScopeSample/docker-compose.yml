version: '3.8'
services:
  web:
   container_name: web
   build:
    context: .
    dockerfile: ./Dockerfile
   ports:
    - "8080:80"
   networks:
    - multi-container-network
  cache:
    image: redis:latest
    container_name: redis-cache-container    
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - multi-container-network

  kafka-zookeeper:
     image: confluentinc/cp-zookeeper:7.0.1
     container_name: kafka-zookeeper-container
     environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
     networks:
      - multi-container-network

  kafka-broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka-broker-container
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - kafka-zookeeper
    networks:
      - multi-container-network 
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'kafka-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka-broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1 
networks:
  multi-container-network:
    driver: "bridge"
  
    #volumes: 
      #- cache:/data
#volumes:
  #cache:
    #driver: local